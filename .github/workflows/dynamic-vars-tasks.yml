name: Build and PR with CodeQL Scan

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Snapshot build version"
        required: true
        default: "1.0.0"

jobs:
  checkout-and-build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Git checkout
        uses: actions/checkout@v3

      # Step 2: Set up JDK 8
      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: "8"
          distribution: "adopt"

      # Step 3: Build with Maven
      - name: Build with Maven
        run: mvn clean install

      # Step 4: Configure Git user for committing changes
      - name: Configure Git user
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      # Step 5: Create a new branch 'dynamic-vars-tasks' and update the version in pom.xml
      - name: Update version for swagger-petstore in pom.xml
        run: |
          git checkout -b dynamic-vars-tasks
          sed -i -E '/<artifactId>swagger-petstore<\/artifactId>/,/<\/version>/ s|<version>[0-9.]*</version>|<version>${{ github.event.inputs.version }}</version>|' pom.xml

      # Step 6: Commit the version change
      - name: Commit version change
        run: |
          git add pom.xml
          git commit -m "Update version to ${{ github.event.inputs.version }}"

      # Step 7: Push the branch to the remote repository
      - name: Push changes to new branch
        run: git push origin dynamic-vars-tasks

  create-pr:
    runs-on: ubuntu-latest
    needs: checkout-and-build

    steps:
      # Step 8: Create a pull request if the build is successful
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: dynamic-vars-tasks
          title: "Dynamic Snapshot Version PR"
          body: "Automatically generated PR with snapshot version: ${{ github.event.inputs.version }}"
          base: master

  codeql-scan:
    runs-on: ubuntu-latest
    needs: create-pr

    steps:
      # Step 9: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 10: Initialize CodeQL scanning
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: "java"

      # Step 11: Perform CodeQL scan
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
